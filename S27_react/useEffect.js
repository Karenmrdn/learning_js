/* useEffect runs every time, when component renders, by default.
But we need to add second parameter, which is array of dependencies,
to run useEffect every time, when dependency value changes. */

/* Очистка эффекта
Часто эффекты создают ресурсы, которые необходимо очистить (или сбросить) 
перед тем, как компонент покидает экран, например подписку или идентификатор таймера. 
Чтобы сделать это, функция переданная в useEffect, может вернуть функцию очистки. 
Например, чтобы создать подписку: */
useEffect(() => {
  const subscription = props.source.subscribe();
  return () => {
    // Очистить подписку
    subscription.unsubscribe();
  };
});
/* Функция очистки запускается до удаления компонента из пользовательского интерфейса, 
чтобы предотвратить утечки памяти. Кроме того, если компонент рендерится несколько раз 
(как обычно происходит), предыдущий эффект очищается перед выполнением следующего эффекта. */

/* !!! Когда именно React будет сбрасывать эффект? 
React будет сбрасывать эффект перед тем, как компонент размонтируется. 
Однако, как мы уже знаем, эффекты выполняются не один раз, а при каждом рендере. 
Вот почему React также сбрасывает эффект из предыдущего рендера перед тем, как запустить следующий. */